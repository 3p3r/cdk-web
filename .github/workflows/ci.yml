name: cdk-web CI

on:
  workflow_dispatch:
  push:
    branches: ["*"]
  pull_request_target:
    branches: ["*"]

permissions:
  id-token: write
  contents: write

jobs:
  main:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
      cancel-in-progress: false
    steps:
      - name: setup aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-cdk-web
          aws-region: us-east-1

      - name: setup checkout
        run: |
          export GIT_CREDENTIAL=$(aws --output json ssm get-parameter --name /github-actions/github-pat | jq -r ".Parameter.Value")
          echo "GIT_CREDENTIAL=$GIT_CREDENTIAL" >> $GITHUB_ENV
          echo "::add-mask::$GIT_CREDENTIAL"

      - name: setup public url
        run: |
          export PUBLIC_URL="https://$GITHUB_REPOSITORY_OWNER.github.io/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')"
          echo "PUBLIC_URL=$PUBLIC_URL" >> $GITHUB_ENV
          echo "PUBLIC_URL=$PUBLIC_URL"

      - uses: actions/checkout@v2
        with:
          token: ${{ env.GIT_CREDENTIAL }}

      - name: setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v2
        with:
          cache: "npm"
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: setup npm
        run: |
          export NODE_AUTH_TOKEN=$(aws --output json ssm get-parameter --name /github-actions/npm-token | jq -r ".Parameter.Value")
          echo "NODE_AUTH_TOKEN=$NODE_AUTH_TOKEN" >> $GITHUB_ENV
          echo "::add-mask::$NODE_AUTH_TOKEN"

      - name: installing dependencies
        run: npm install

      - name: building the bundle
        run: npm run build

      - name: nothing should be modified
        run: git diff --exit-code .

      - name: update homepage for npm
        run: npx --yes json -I -f package.json -e "this.homepage=\"$PUBLIC_URL\""

      - name: running unit tests
        run: npm test

      - name: releasing on NPM (cdk-web - with dependencies)
        if: ${{ !env.ACT && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: npm publish

      - name: releasing on NPM (aws-cdk-web - without dependencies)
        if: ${{ !env.ACT && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: |
          rm -rf aws-cdk-web
          mkdir -p aws-cdk-web
          pushd aws-cdk-web
            npm init -y
            mkdir -p dist
            cp ../dist/cdk-web.js dist/
            cp ../README.md ../LICENSE ../index.d.ts .
            for key in license version description author homepage keywords repository bugs; do
              npx --yes json -I -f package.json -e "this.$key=\"`node -p \"require('../package.json').$key\"`\""
            done
            for key in scripts keywords; do
              npx --yes json -I -f package.json -e "this.$key=undefined"
            done
            npm publish
          popd
          rm -rf aws-cdk-web

      - name: tagging a new release on Git
        if: ${{ !env.ACT && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ env.GIT_CREDENTIAL }}
          script: |
            const { version } = require('./package.json');
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${ version }`,
              sha: context.sha
            })

      - name: deploy playground
        if: ${{ !env.ACT && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ env.GIT_CREDENTIAL }}
          publish_dir: ./build

      - name: version bump
        if: ${{ !env.ACT && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: |
          git pull
          npx --yes json -I -f package.json -e 'this.homepage=""'
          npm version patch --force -m "[no ci] version bumped post-release"
          git push --atomic
