name: cdk-web CI

on:
  workflow_dispatch:
  push:
    branches: ["*"]
  pull_request_target:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: false

permissions:
  id-token: write
  contents: write

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.release.outputs.release }}
    steps:
      - id: release
        run: echo "::set-output name=release::${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}"
  main:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: setup aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-cdk-web
          aws-region: us-east-1

      - name: setup checkout
        run: |
          export GIT_CREDENTIAL=$(aws --output json ssm get-parameter --name /github-actions/github-pat | jq -r ".Parameter.Value")
          echo "GIT_CREDENTIAL=$GIT_CREDENTIAL" >> $GITHUB_ENV
          echo "::add-mask::$GIT_CREDENTIAL"

      - name: setup public url
        run: |
          export PUBLIC_URL="https://$GITHUB_REPOSITORY_OWNER.github.io/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')"
          echo "PUBLIC_URL=$PUBLIC_URL" >> $GITHUB_ENV
          echo "PUBLIC_URL=$PUBLIC_URL"

      - uses: actions/checkout@v3
        with:
          token: ${{ env.GIT_CREDENTIAL }}

      - name: setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: setup npm
        run: |
          export NODE_AUTH_TOKEN=$(aws --output json ssm get-parameter --name /github-actions/npm-token | jq -r ".Parameter.Value")
          echo "NODE_AUTH_TOKEN=$NODE_AUTH_TOKEN" >> $GITHUB_ENV
          echo "::add-mask::$NODE_AUTH_TOKEN"

      - name: install dependencies
        run: npm ci

      - name: check coverage
        run: npm run coverage

      - name: build the release bundle
        run: |
          npm run build
          git checkout HEAD -- 'package*.json'
          git diff --exit-code .
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: run unit and e2e tests
        run: npm test

      - name: release on NPM (cdk-web - with devDependencies)
        if: needs.check.outputs.release == 'true'
        run: |
          node scripts/strip-package-json.js cdk-web
          npm publish

      - name: release on NPM (aws-cdk-web - without devDependencies)
        if: needs.check.outputs.release == 'true'
        run: |
          mkdir aws-cdk-web
          cp -R scripts types dist ./aws-cdk-web
          cp README.md LICENSE index.d.ts package.json ./aws-cdk-web
          pushd aws-cdk-web
            node scripts/strip-package-json.js aws-cdk-web
            npm publish
          popd
          rm -rf aws-cdk-web

      - name: tag a new release on Git
        if: needs.check.outputs.release == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{ env.GIT_CREDENTIAL }}
          script: |
            const { version } = require('./package.json');
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${ version }`,
              sha: context.sha
            })

      - name: deploy playground
        if: needs.check.outputs.release == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ env.GIT_CREDENTIAL }}
          publish_dir: ./build
